
@article{samal_towards_2018,
	title = {Towards a Socially Optimal Multi-Modal Routing Platform},
	volume = {abs/1802.10140},
	url = {http://arxiv.org/abs/1802.10140},
	journal = {CoRR},
	author = {Samal, Chinmaya and Zheng, Liyuan and Sun, Fangzhou and Ratliff, Lillian J. and Dubey, Abhishek},
	year = {2018}
}

@article{nannapaneni_automated_2017,
	title = {Automated Uncertainty Quantification through Information Fusion in Manufacturing Processes},
	abstract = {Evaluation of key performance indicators (KPIs) such as energy consumption is essential for decision- making during the design and operation of smart manufacturing systems. The measurements of KPIs are strongly affected by several uncertainty sources such as input material uncertainty, the inherent variability in the manufacturing process, model uncertainty and the uncertainty in the sensor measurements of operational data. A comprehensive understanding of the uncertainty sources and their effect on the KPIs is required to make the manufacturing processes more efficient. Towards this objective, this paper proposes an automated methodology to generate a Hierarchical Bayesian network (HBN) for a manufacturing system from semantic system models, physics-based models and available data in an automated manner, which can be used to perform uncertainty quantification (UQ) analysis. The semantic system model, which is a high-level model describing the system along with its parameters is assumed to be available in the Generic Modeling Environment (GME) platform. Apart from semantic description, physics-based models, if available, are assumed to be available in model libraries. The proposed methodology is divided into two tasks – (1) Automated Hierarchical Bayesian network construction using semantic system model, available models and data, and (2) Automated uncertainty quantification (UQ) analysis. A metamodel of a HBN is developed using the GME, along with a syntax representation for the associated conditional probability tables/distributions. The constructed HBN corresponding to a system is represented as an instance model of the HBN metamodel. On the metamodel, a model interpreter is written to be able to carry out the UQ analysis in an automated manner for any HBN instance model conforming to the HBN metamodel. The proposed methodologies are demonstrated using an injection molding process.},
	journal = {Journal of Sustainable and Smart Manufacturing Systems},
	author = {Nannapaneni, Saideep and Mahadevan, Sankaran and Dubey, Abhishek and Lechevalier, David and Narayanan, Anantha and Rachuri, Sudarsan},
	year = {2017}
}

@article{balasubramanian_drems_2015,
	title = {DREMS ML: A Wide Spectrum Architecture Design Language for Distributed Computing Platform},
	volume = {106},
	issn = {0167-6423},
	url = {http://dx.doi.org/10.1016/j.scico.2015.04.002},
	doi = {10.1016/j.scico.2015.04.002},
	abstract = {Complex sensing, processing and control applications running on distributed platforms are difficult to design, develop, analyze, integrate, deploy and operate, especially if resource constraints, fault tolerance and security issues are to be addressed. While technology exists today for engineering distributed, real-time component-based applications, many problems remain unsolved by existing tools. Model-driven development techniques are powerful, but there are very few existing and complete tool chains that offer an end-to-end solution to developers, from design to deployment. There is a need for an integrated model-driven development environment that addresses all phases of application lifecycle including design, development, verification, analysis, integration, deployment, operation and maintenance, with supporting automation in every phase. Arguably, a centerpiece of such a model-driven environment is the modeling language. To that end, this paper presents a wide-spectrum architecture design language called DREMS ML that itself is an integrated collection of individual domain-specific sub-languages. We claim that the language promotes “correct-by-construction” software development and integration by supporting each individual phase of the application lifecycle. Using a case study, we demonstrate how the design of DREMS ML impacts the development of embedded systems.},
	number = {C},
	journal = {Sci. Comput. Program.},
	author = {Balasubramanian, Daniel and Dubey, Abhishek and Otte, William and Levendovszky, Tihamer and Gokhale, Aniruddha and Kumar, Pranav and Emfinger, William and Karsai, Gabor},
	month = {aug},
	year = {2015},
	keywords = {Architecture description language, Fractionated spacecraft, Model-driven development},
	pages = {3--29}
}

@article{dubey_component_2011,
	title = {A Component Model for Hard Real-time Systems: CCM wwith ARINC-653},
	volume = {41},
	issn = {1097-024X},
	url = {http://www.isis.vanderbilt.edu/sites/default/files/Journal_0.pdf},
	doi = {10.1002/spe.1083},
	abstract = {The size and complexity of software in safety-critical systems is increasing at a rapid pace. One technology that can be used to mitigate this complexity is component-based software development. However, in spite of the apparent benefits of a component-based approach to development, little work has been done in applying these concepts to hard real-time systems. This paper improves the state of the art by making three contributions: (1) we present a component model for hard real-time systems and define the semantics of different types of component interactions; (2) we present an implementation of a middleware that supports this component model. This middleware combines an open-source CORBA Component Model (CCM) implementation (MICO) with ARINC-653: a state-of-the-art real-time operating systems (RTOS) standard, (3) finally; we describe a modeling environment that enables design, analysis, and deployment of component assemblies. We conclude with a discussion of the lessons learned during this exercise. Our experiences point toward extending both the CCM as well as revising the ARINC-653.},
	number = {12},
	journal = {Software: Practice and Experience},
	author = {Dubey, Abhishek and Karsai, Gabor and Mahadevan, Nagabhushan},
	year = {2011},
	keywords = {ARINC-653, hard-real time systems, real-time component model},
	pages = {1517--1550}
}

@article{dubey_performance_2009,
	title = {Performance Modeling of Distributed Multi-tier Enterprise Systems},
	volume = {37},
	issn = {0163-5999},
	url = {http://doi.acm.org/10.1145/1639562.1639566},
	doi = {10.1145/1639562.1639566},
	number = {2},
	journal = {SIGMETRICS Perform. Eval. Rev.},
	author = {Dubey, Abhishek and Mehrotra, Rajat and Abdelwahed, Sherif and Tantawi, Asser},
	month = {oct},
	year = {2009},
	pages = {9--11}
}

@article{dubey_towards_2007,
	title = {Towards a verifiable real-time, autonomic, fault mitigation framework for large scale real-time systems},
	volume = {3},
	issn = {1614-5046},
	url = {http://www.isis.vanderbilt.edu/sites/default/files/Dubey_A_1_24_2007_Towards_a_.pdf},
	doi = {10.1007/s11334-006-0015-7},
	abstract = {Designing autonomic fault responses is difficult, particularly in large-scale systems, as there is no single ‘perfect’ fault mitigation response to a given failure. The design of appropriate mitigation actions depend upon the goals and state of the application and environment. Strict time deadlines in real-time systems further exacerbate this problem. Any autonomic behavior in such systems must not only be functionally correct but should also conform to properties of liveness, safety and bounded time responsiveness. This paper details a real-time fault-tolerant framework, which uses a reflex and healing architecture to provide fault mitigation capabilities for large-scale real-time systems. At the heart of this architecture is a real-time reflex engine, which has a state-based failure management logic that can respond to both event- and time-based triggers. We also present a semantic domain for verifying properties of systems, which use this framework of real-time reflex engines. Lastly, a case study, which examines the details of such an approach, is presented.},
	language = {English},
	number = {1},
	journal = {Innovations in Systems and Software Engineering},
	author = {Dubey, Abhishek and Nordstrom, Steve and Keskinpala, Turker and Neema, Sandeep and Bapty, Ted and Karsai, Gabor},
	year = {2007},
	keywords = {Fault tolerance, Real time systems, Autonomic computing, Fault mitigation, Healing, Model checking, Reflex, Timed automaton},
	pages = {33--52}
}

@article{levendovszky_distributed_2014,
	title = {Distributed Real-Time Managed Systems: A Model-Driven Distributed Secure Information Architecture Platform for Managed Embedded Systems},
	volume = {31},
	issn = {0740-7459},
	url = {http://www.isis.vanderbilt.edu/sites/default/files/f6paper.pdf},
	doi = {10.1109/MS.2013.143},
	abstract = {Architecting software for a cloud computing platform built from mobile embedded devices incurs many challenges that aren't present in traditional cloud computing. Both effectively managing constrained resources and isolating applications without adverse performance effects are needed. A practical design- and runtime solution incorporates modern software development practices and technologies along with novel approaches to address these challenges. The patterns and principles manifested in this system can potentially serve as guidelines for current and future practitioners in this field.},
	number = {2},
	journal = {Software, IEEE},
	author = {Levendovszky, Tihamer and Dubey, Abhishek and Otte, William R. and Balasubramanian, Daniel and Coglio, Alessandro and Nyako, Sandor and Emfinger, William and Kumar, Pranav and Gokhale, Aniruddha and Karsai, Gabor},
	month = {mar},
	year = {2014},
	keywords = {Ports (Computers), Computer architecture, Cloud computing, Computer security, graphical environments, information flow controls, Mobile communication, Mobile computing, Next generation networking, real-time systems and embedded systems},
	pages = {62--69}
}

@article{mahadevan_deliberative_2013,
	title = {Deliberative, Search-based Mitigation Strategies for Model-based Software Health Management},
	volume = {9},
	issn = {1614-5046},
	url = {http://dx.doi.org/10.1007/s11334-013-0215-x},
	doi = {10.1007/s11334-013-0215-x},
	number = {4},
	journal = {Innov. Syst. Softw. Eng.},
	author = {Mahadevan, Nagabhushan and Dubey, Abhishek and Balasubramanian, Daniel and Karsai, Gabor},
	month = {dec},
	year = {2013},
	keywords = {ARINC-653, Component-based software development, Deliberative reasoning, Software health management},
	pages = {293--318}
}

@article{mahadevan_using_2015,
	title = {Using temporal causal models to isolate failures in power system protection devices},
	volume = {18},
	issn = {1094-6969},
	doi = {10.1109/MIM.2015.7155770},
	number = {4},
	journal = {Instrumentation Measurement Magazine, IEEE},
	author = {Mahadevan, N. and Dubey, A. and Chhokra, A. and Guo, H. and Karsai, G.},
	month = {aug},
	year = {2015},
	keywords = {Computational modeling, Simulink, Circuit faults, fault behavior, fault propagation, multifault scenarios, Power distribution, power system protection devices, power transmission faults, Power transmission lines, power transmission protection, power transmission systems, Protective relaying, single fault scenarios, Smart grids, Stateflow, TCD, temporal causal diagrams, temporal causal models, Transmission line measurements},
	pages = {28--39}
}

@article{martins_computation_2016,
	title = {Computation and Communication Evaluation of an Authentication Mechanism for Time-Triggered Networked Control Systems},
	volume = {16},
	issn = {1424-8220},
	url = {http://www.mdpi.com/1424-8220/16/8/1166},
	doi = {10.3390/s16081166},
	abstract = {In modern networked control applications, confidentiality and integrity are important features to address in order to prevent against attacks. Moreover, network control systems are a fundamental part of the communication components of current cyber-physical systems (e.g., automotive communications). Many networked control systems employ Time-Triggered (TT) architectures that provide mechanisms enabling the exchange of precise and synchronous messages. TT systems have computation and communication constraints, and with the aim to enable secure communications in the network, it is important to evaluate the computational and communication overhead of implementing secure communication mechanisms. This paper presents a comprehensive analysis and evaluation of the effects of adding a Hash-based Message Authentication (HMAC) to TT networked control systems. The contributions of the paper include (1) the analysis and experimental validation of the communication overhead, as well as a scalability analysis that utilizes the experimental result for both wired and wireless platforms and (2) an experimental evaluation of the computational overhead of HMAC based on a kernel-level Linux implementation. An automotive application is used as an example, and the results show that it is feasible to implement a secure communication mechanism without interfering with the existing automotive controller execution times. The methods and results of the paper can be used for evaluating the performance impact of security mechanisms and, thus, for the design of secure wired and wireless TT networked control systems.},
	number = {8},
	journal = {Sensors},
	author = {Martins, Goncalo and Moondra, Arul and Dubey, Abhishek and Bhattacharjee, Anirban and Koutsoukos, Xenofon D.},
	year = {2016},
	pages = {1166}
}

@article{nannapaneni_mission-based_2016,
	title = {Mission-based reliability prediction in component-based systems},
	volume = {7},
	number = {003},
	journal = {International Journal of Prognostics and Health Management},
	author = {Nannapaneni, Saideep and Dubey, Abhishek and Abdelwahed, Sherif and Mahadevan, Sankaran and Neema, Sandeep and Bapty, Ted},
	month = {feb},
	year = {2016}
}

@article{pradhan_chariot:_2017,
	title = {CHARIOT: A Holistic, Goal Driven Orchestration Solution for Resilient IoT Applications},
	abstract = {The emerging trend in Internet of Things (IoT) applications is to move the computation (cyber) closer to the source of the data (physical). This paradigm is often referred to as \textit{edge computing}. If edge resources are pooled together they can be used as decentralized shared resources for IoT applications, providing increased capacity to scale up computations and minimize end-to-end latency. Managing applications on these edge resources is hard, however, due to their remote, distributed, and possibly dynamic nature, which necessitates autonomous management mechanisms that facilitate application deployment, failure avoidance, failure management, and incremental updates. To address this need, we present CHARIOT, which is orchestration middleware capable of autonomously managing IoT systems that comprises edge resources and applications. CHARIOT implements a three-layer architecture. The topmost layer comprises a system description language; the middle layer comprises a persistent data storage layer and the corresponding schema to store system information; and the bottom layer comprises a management engine, which uses information stored in persistent data storage to formulate constraints that encode system properties and requirements, thereby enabling the use of Satisfiability Modulo Theories (SMT) solvers to compute optimal system (re)configurations dynamically at runtime. This paper describes the structure and functionality of CHARIOT and evaluates its efficacy as the basis for a smart parking system case study that is responsible for parking space management.},
	journal = {ACM Transactions on Cyber-Physical Systems},
	author = {Pradhan, Subhav and D, Abhishek and Khare, Shweta and Nannapaneni, Saideep and Gokhale, Aniruddha and Mahadevan, Sankaran and Schmidt, Douglas C. and Lehofer, Martin},
	year = {2017},
	annote = {submitted}
}

@article{piccoli_lqcd_2010,
	title = {LQCD workflow execution framework: Models, provenance and fault-tolerance},
	volume = {219},
	url = {http://stacks.iop.org/1742-6596/219/i=7/a=072047},
	abstract = {Large computing clusters used for scientific processing suffer from systemic failures when operated over long continuous periods for executing workflows. Diagnosing job problems and faults leading to eventual failures in this complex environment is difficult, specifically when the success of whole workflow might be affected by a single job failure. In this paper, we introduce a model-based, hierarchical, reliable execution framework that encompass workflow specification, data provenance, execution tracking and online monitoring of each workflow task, also referred to as participants. The sequence of participants is described in an abstract parameterized view, which is translated into a concrete data dependency based sequence of participants with defined arguments. As participants belonging to a workflow are mapped onto machines and executed, periodic and on-demand monitoring of vital health parameters on allocated nodes is enabled according to pre-specified rules. These rules specify conditions that must be true pre-execution, during execution and post-execution. Monitoring information for each participant is propagated upwards through the reflex and healing architecture, which consist of hierarchical network of decentralized fault management entities, called reflex engines. They are instantiated as state machines or timed automatons that change state and initiate reflexive mitigation action(s) upon occurrence of certain faults. We describe how this cluster reliability framework is combined with the workflow execution framework using formal rules and actions specified within a structure of first order predicate logic that enables a dynamic management design that reduces manual administrative workload, and increases cluster-productivity. Preliminary results on a virtual setup with injection failures are shown.},
	number = {7},
	journal = {Journal of Physics: Conference Series},
	author = {Piccoli, Luciano and Dubey, Abhishek and Simone, James N. and Kowalkowlski, James B.},
	year = {2010},
	pages = {072047}
}

@article{pradhan_achieving_2016,
	title = {Achieving resilience in distributed software systems via self-reconfiguration},
	volume = {122},
	issn = {0164-1212},
	url = {//www.sciencedirect.com/science/article/pii/S0164121216300590},
	doi = {http://dx.doi.org/10.1016/j.jss.2016.05.038},
	abstract = {Abstract Improvements in mobile networking combined with the ubiquitous availability and adoption of low-cost development boards have enabled the vision of mobile platforms of Cyber-Physical Systems (CPS), such as fractionated spacecraft and \{UAV\} swarms. Computation and communication resources, sensors, and actuators that are shared among different applications characterize these systems. The cyber-physical nature of these systems means that physical environments can affect both the resource availability and software applications that depend on resource availability. While many application development and management challenges associated with such systems have been described in existing literature, resilient operation and execution have received less attention. This paper describes our work on improving runtime support for resilience in mobile CPS, with a special focus on our runtime infrastructure that provides autonomous resilience via self-reconfiguration. We also describe the interplay between this runtime infrastructure and our design-time tools, as the later is used to statically determine the resilience properties of the former. Finally, we present a use case study to demonstrate and evaluate our design-time resilience analysis and runtime self-reconfiguration infrastructure.},
	journal = {Journal of Systems and Software},
	author = {Pradhan, Subhav and Dubey, Abhishek and Levendovszky, Tihamer and Kumar, Pranav Srinivas and Emfinger, William A. and Balasubramanian, Daniel and Otte, William and Karsai, Gabor},
	year = {2016},
	keywords = {Performance evaluation},
	pages = {344 -- 363}
}

@article{biswas_data-driven_2016,
	title = {A data-driven approach for mode and anomaly detection from Spacecraft Telemetry Streams},
	volume = {7},
	url = {https://www.phmsociety.org/sites/phmsociety.org/files/phm_submission/2016/ijphm_16_033.pdf},
	number = {003},
	journal = {International Journal of Prognostics and Health Management},
	author = {Biswas, Gautam and Khorasgani, Hamed and Stanje, Gerald and Dubey, Abhishek and Deb, Somnath and Ghoshal, Sudipto},
	month = {feb},
	year = {2016}
}

@article{nordstrom_autonomic_2011,
	title = {Autonomic Healing of Model-Based Systems},
	volume = {8},
	doi = {10.2514/1.31940},
	number = {4},
	journal = {Journal of Aerospace Computing, Information, and Communication},
	author = {Nordstrom, Steve and Dubey, Abhishek and Keskinpala, Turker and Neema, Sandeep and Bapty, Theodore},
	year = {2011},
	pages = {87--99}
}

@article{sun_transit-hub:_2017,
	title = {Transit-Hub: A Smart Public Transportation Decision Support System with Multi-timescale Analytical Services},
	journal = {Cluster Computing},
	author = {Sun, Fangzhou and Dubey, Abhishek and White, Jules and Gokhale, Aniruddha},
	year = {2017},
	annote = {under review}
}

@article{chokra_hierarchical_2017,
	title = {Hierarchical Reasoning about Faults in Cyber-Physical Energy Systems using Temporal Causal Diagrams},
	journal = {International Journal of Prognostics and Health Management},
	author = {Chokra, Ajay and Mahadevan, Nagbhushan and Dubey, Abhishek and Karsai, Gabor},
	year = {2017}
}
